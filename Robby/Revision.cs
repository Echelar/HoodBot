namespace RobinHood70.Robby
{
	using System;
	using WallE.Base;
	using static WikiCommon.Globals;

	/// <summary>Stores all information related to a specific revision.</summary>
	/// <remarks>Revisions can apply to users or pages. Pages store title information at the parent level, thus they are not included in the base Revision object.</remarks>
	/// <autogeneratedoc />
	public class Revision
	{
		#region Constructors

		/// <summary>Initializes a new instance of the <see cref="Revision" /> class.</summary>
		/// <param name="revisionData">The revision data.</param>
		public Revision(RevisionsItem revisionData)
		{
			ThrowNull(revisionData, nameof(revisionData));
			this.Anonymous = revisionData.Flags.HasFlag(RevisionFlags.Anonymous);
			this.Comment = revisionData.Comment;
			this.Id = revisionData.RevisionId;
			this.Minor = revisionData.Flags.HasFlag(RevisionFlags.Minor);
			this.ParentId = revisionData.ParentId;
			this.Text = revisionData.Content;
			this.Timestamp = revisionData.Timestamp.Value;
			this.User = revisionData.User;
		}

		/// <summary>Initializes a new instance of the <see cref="Revision" /> class without populating it.</summary>
		protected internal Revision()
		{
		}
		#endregion

		#region Public Properties

		/// <summary>Gets or sets a value indicating whether this <see cref="Revision" /> is anonymous.</summary>
		/// <value><c>true</c> if anonymous; otherwise, <c>false</c>.</value>
		/// <autogeneratedoc />
		public bool Anonymous { get; protected set; }

		/// <summary>Gets or sets the comment.</summary>
		/// <value>The comment.</value>
		/// <autogeneratedoc />
		public string Comment { get; protected set; }

		/// <summary>Gets or sets the identifier.</summary>
		/// <value>The identifier.</value>
		/// <autogeneratedoc />
		public long Id { get; protected set; }

		/// <summary>Gets or sets a value indicating whether this <see cref="Revision" /> is minor.</summary>
		/// <value><c>true</c> if minor; otherwise, <c>false</c>.</value>
		/// <autogeneratedoc />
		public bool Minor { get; protected set; }

		/// <summary>Gets or sets the parent identifier.</summary>
		/// <value>The parent identifier.</value>
		/// <autogeneratedoc />
		public long ParentId { get; protected set; }

		/// <summary>Gets or sets the text.</summary>
		/// <value>The text.</value>
		/// <autogeneratedoc />
		public string Text { get; protected set; }

		/// <summary>Gets or sets the timestamp.</summary>
		/// <value>The timestamp.</value>
		/// <autogeneratedoc />
		public DateTime Timestamp { get; protected set; }

		/// <summary>Gets or sets the user.</summary>
		/// <value>The user.</value>
		/// <autogeneratedoc />
		public string User { get; protected set; }
		#endregion
	}
}