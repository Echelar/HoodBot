Users
IReadOnlyList<AllUsersItem> AllUsers(AllUsersInput input);
IReadOnlyList<UsersItem> Users(UsersInput input);
Contributors

User
BlockResult Block(BlockInput input);
EmailUserResult EmailUser(EmailUserInput input);
UnblockResult Unblock(UnblockInput input);
IReadOnlyList<UserContributionsItem> UserContributions(UserContributionsInput input);
UserInfoResult UserInfo(UserInfoInput input);
UserRightsResult UserRights(UserRightsInput input);
IReadOnlyList<WatchlistItem> Watchlist(WatchlistInput input);
IReadOnlyList<WatchlistRawItem> WatchlistRaw(WatchlistRawInput input);

Site
IReadOnlyList<BlocksResult> Blocks(BlocksInput input);
bool ClearHasMessage();
IReadOnlyDictionary<string name, string message> Messages(... per TitlesCollection)
IReadOnlyList<PagePropertyNamesItem> PagePropertyNames(PagePropertyNamesInput input);
PatrolResult Patrol(PatrolInput input);
QueryPageResult QueryPage(QueryPageInput input);
IReadOnlyList<RecentChangesItem> RecentChanges(RecentChangesInput input);
string Rsd();
UploadResult Upload(UploadInput input);

Titles
/* In retrospect, I don't think it makes sense to include any of these at all, but I'll leave this list here for now for future reconsideration. This idea for most of these was that they would return custom results based on an input set of titles.
API:Contributors|contributors
API:Extlinks|extlinks
API:Images|images
API:Iwlinks|iwlinks
API:Langlinks|langlinks
API:Linkshere|linkshere
API:Redirects|redirects
API:Transcludedin|transcludedin

