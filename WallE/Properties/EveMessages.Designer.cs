//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RobinHood70.WallE.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class EveMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal EveMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RobinHood70.WallE.Properties.EveMessages", typeof(EveMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The site does not support the {0} module..
        /// </summary>
        internal static string ActionNotSupported {
            get {
                return ResourceManager.GetString("ActionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A session token was requested for rollback or userrights on a wiki where these are not session tokens..
        /// </summary>
        internal static string BadTokenRequest {
            get {
                return ResourceManager.GetString("BadTokenRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An item in the collection {0} was null (or whitespace only for strings), or there were no items in the collection..
        /// </summary>
        internal static string CollectionInvalid {
            get {
                return ResourceManager.GetString("CollectionInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: {1}.
        /// </summary>
        internal static string ColonText {
            get {
                return ResourceManager.GetString("ColonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the custom stop check failed.
        /// </summary>
        internal static string CustomStopCheckFailed {
            get {
                return ResourceManager.GetString("CustomStopCheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The flags input must contain only a single flag..
        /// </summary>
        internal static string InputNonUnique {
            get {
                return ResourceManager.GetString("InputNonUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A query was submitted with no modules..
        /// </summary>
        internal static string InvalidQuery {
            get {
                return ResourceManager.GetString("InvalidQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For MediaWiki version 1.23 only, you must specify a user name rather than a user ID for the UserRights function, or provide your own token. The API for that version allowed user IDs to be used, but provided no way to get a token by user ID, nor to get a user name from the user ID..
        /// </summary>
        internal static string InvalidUserRightsRequest {
            get {
                return ResourceManager.GetString("InvalidUserRightsRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The query you attempted is invalid on this wiki..
        /// </summary>
        internal static string NoSupportedModules {
            get {
                return ResourceManager.GetString("NoSupportedModules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a string value..
        /// </summary>
        internal static string NotAString {
            get {
                return ResourceManager.GetString("NotAString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter passed to {0} had an invalid value of {1}..
        /// </summary>
        internal static string ParameterInvalid {
            get {
                return ResourceManager.GetString("ParameterInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one of prependText or appendText must be a string of one or more characters..
        /// </summary>
        internal static string PrependAppend {
            get {
                return ResourceManager.GetString("PrependAppend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The query page {0} is disabled on this wiki..
        /// </summary>
        internal static string QueryPageDisabled {
            get {
                return ResourceManager.GetString("QueryPageDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You attempted to reblock a user who isn&apos;t already blocked. Versions of the API prior to 1.25 do not handle this correctly. Try again with the Reblock property set to false..
        /// </summary>
        internal static string ReblockFailed {
            get {
                return ResourceManager.GetString("ReblockFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API result is not valid and no custom deserializer has been implemented..
        /// </summary>
        internal static string ResultInvalid {
            get {
                return ResourceManager.GetString("ResultInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MediaWiki versions prior to 1.25 do not support the revisions property modules as generators..
        /// </summary>
        internal static string RevisionsGeneratorVersionInvalid {
            get {
                return ResourceManager.GetString("RevisionsGeneratorVersionInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHA1 check for revision {0} on page &quot;{1}&quot; failed..
        /// </summary>
        internal static string RevisionSha1Failed {
            get {
                return ResourceManager.GetString("RevisionSha1Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter {0} cannot be null or only whitespace..
        /// </summary>
        internal static string StringInvalid {
            get {
                return ResourceManager.GetString("StringInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the bot&apos;s talk page changed.
        /// </summary>
        internal static string TalkPageChanged {
            get {
                return ResourceManager.GetString("TalkPageChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extension {0} returned a descriptionmsgparams that wasn&apos;t an array of strings. This is unhandled by the framework. Please report this to robinhood70@live.ca..
        /// </summary>
        internal static string UnhandledParams {
            get {
                return ResourceManager.GetString("UnhandledParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the current username changed unexpectedly.
        /// </summary>
        internal static string UserNameChanged {
            get {
                return ResourceManager.GetString("UserNameChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MediaWiki 1.22 and below support watching titles only. Please do not use a generator, page ids, or revision ids..
        /// </summary>
        internal static string WatchNotSupported {
            get {
                return ResourceManager.GetString("WatchNotSupported", resourceCulture);
            }
        }
    }
}
